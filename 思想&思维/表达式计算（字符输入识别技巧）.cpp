#include <iostream>

using namespace std;
typedef long long ll;
ll now, sum, x,n;
ll mod = 1e9;
char c;
int main()
{
	cin >> n;
	cin >> now;  //自动输入所有数字型字符到now中，断开其余符号
	while (cin >> c >> x)  //输入符号和下一个数字，直到输入完毕
	{
		if (c == '+')
		{
			sum = (sum + now) % mod; //加入结果
			now = x;
		}
		else
		{
			now = (now * x) % mod; //先乘起来，等待下一次
		}
	}
	cout << (sum + now) % mod << endl;
	return 0;
}

// 题目描述：
// 给定一个只包含加法和乘法的算术表达式，请你计算出表达式的值。
// 由于这个表达式的值可能很大，请输出这个值对\(10^{9}\)取模后的结果。

// 输入描述:
// 第一行输入一个整数\(n\)，表示这个表达式的长度。\((1 \leq n \leq 10^{5})\)
// 第二行输入一个长度为\(n\)的字符串\(s\)，代表要计算的算术表达式。
// (保证算术表达式中出现的数字\(x\)均满足\(0 \leq x \leq 10^{9}\))
// (出现的数字均不包含前导\(0\))

// 输出描述:
// 输出一个整数，表示表达式的值对\(10^{9}\)取模后的结果。

// 示例1
// 输入
// ```
// 7
// 1+1*3+4
// ```
// 输出
// ```
// 8
// ``` 